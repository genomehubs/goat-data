name: genomehubs-init
on:
  workflow_call:
    inputs:
      dockerversion:
        required: true
        type: string
      release:
        required: true
        type: string
      resources:
        required: true
        type: string

jobs:
  prepare-snapshots:
    runs-on: [self-hosted, runner1]
    steps:
      - uses: actions/checkout@v3

      - name: Check es health
        run: curl -s "es1:9200/_cat/health"

      - name: Create current snapshot repo if it doesn't exist
        run: |
          curl -s -X PUT "es1:9200/_snapshot/current" \
            -H 'Content-Type: application/json' \
            -d' { "type": "fs", "settings": { "location": "/usr/share/elasticsearch/snapshots/current" } }' || exit 0

      - name: Create latest snapshot repo if it doesn't exist
        run: |
          curl -s -X PUT "es1:9200/_snapshot/latest" \
            -H 'Content-Type: application/json' \
            -d' { "type": "fs", "settings": { "location": "/usr/share/elasticsearch/snapshots/latest" } }' || exit 0

      - name: Create production RELEASE snapshot repo if it doesn't exist
        run: |
          curl -s -X PUT "es1:9200/_snapshot/production-${{ inputs.release }}" \
            -H 'Content-Type: application/json' \
            -d' { "type": "fs", "settings": { "location": "/usr/share/elasticsearch/snapshots/production/production-${{ inputs.release }}" } }' || exit 0

      - name: Delete indices and snapshots for that release, except current/analysis_file snapshot
        run: |
          curl -s -X DELETE "es1:9200/*--${{ inputs.release }}*"
          curl -s -X DELETE "es1:9200/_snapshot/current/20*"

  genomehubs-init:
    runs-on: [self-hosted, runner1]
    needs:
      - prepare-snapshots
    steps:
      - name: Update version in config
        run: |
          yq '.common.hub.version="${{ inputs.release }}"' sources/goat.yaml > sources/goat.yaml.tmp && mv sources/goat.yaml.tmp sources/goat.yaml

      - name: Run genomehubs init
        run: |
          docker run --rm --network=host \
            -v `pwd`/sources:/genomehubs/sources \
            -v ${{ inputs.resources }}:/genomehubs/resources \
            genomehubs/genomehubs:${{ inputs.dockerversion }} bash -c \
              "genomehubs init \
                --es-host es1:9200 \
                --taxonomy-source ncbi \
                --config-file sources/goat.yaml \
                --taxonomy-jsonl resources/ena-taxonomy/ena-taxonomy.extra.jsonl.gz \
                --taxonomy-ncbi-root 2759 \
                --taxon-preload"

      - name: Add ES index.mapping.nested_objects.limit 1000000
        run: |
          curl -s -X PUT "es1:9200/taxon--ncbi--goat--${{ inputs.release }}/_settings" \
          -H 'Content-Type: application/json' \
          -d '{ "index.mapping.nested_objects.limit" : 1000000 }'

      - name: Snapshot RELEASE init
        run: |
          curl -s -X DELETE "es1:9200/_snapshot/current/${{ inputs.release }}_init" || exit 0
          curl -s -X PUT    "es1:9200/_snapshot/current/${{ inputs.release }}_init?wait_for_completion=true&pretty" \
            -H 'Content-Type: application/json' \
            -d' { "indices": "assembly*${{ inputs.release }},attributes*${{ inputs.release }},feature*${{ inputs.release }},identifiers*${{ inputs.release }},sample*${{ inputs.release }},taxon-*${{ inputs.release }}", "include_global_state":false}'

      - name: Snapshot latest BACKUP init
        run: |
          curl -s -X DELETE "es1:9200/_snapshot/latest/init" || exit 0
          curl -s -X PUT    "es1:9200/_snapshot/latest/init?wait_for_completion=true&pretty" \
            -H 'Content-Type: application/json' \
            -d' { "indices": "assembly*${{ inputs.release }},attributes*${{ inputs.release }},feature*${{ inputs.release }},identifiers*${{ inputs.release }},sample*${{ inputs.release }},taxon-*${{ inputs.release }}", "include_global_state":false}'
