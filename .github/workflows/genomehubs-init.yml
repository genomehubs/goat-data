name: genomehubs-init
on:
  workflow_call:
    inputs:
      dockerversion:
        required: true
        type: string
      release:
        required: true
        type: string
      resources:
        required: true
        type: string

jobs:
  fetch-dockers:
    runs-on: [self-hosted, runner1]
    steps:
      - name: Get dockers
        run: |
          docker pull genomehubs/genomehubs:${{ inputs.dockerversion }}
          docker run --rm genomehubs/genomehubs sh -c 'echo $CONTAINER_VERSION'

  prepare-snapshots:
    runs-on: [self-hosted, runner1]
    steps:
      - uses: actions/checkout@v3

      - name: Check es health
        run: curl -s "es1:9200/_cat/health"

      - name: Create current snapshot repo if it doesn't exist
        run: |
          echo curl -s -X PUT "es1:9200/_snapshot/s3-current" \
            -H 'Content-Type: application/json' \
            -d' { "type": "fs", "settings": { "location": "/usr/share/elasticsearch/snapshots/s3-current" } }' || exit 0

      - name: Create latest snapshot repo if it doesn't exist
        run: |
          echo curl -s -X PUT "es1:9200/_snapshot/s3-latest" \
            -H 'Content-Type: application/json' \
            -d' { "type": "fs", "settings": { "location": "/usr/share/elasticsearch/snapshots/s3-latest" } }' || exit 0

      - name: Create s3-RELEASE snapshot repo if it doesn't exist
        run: |
          echo curl -s -X PUT "es1:9200/_snapshot/s3-${{ inputs.release }}" \
            -H 'Content-Type: application/json' \
            -d' { "type": "fs", "settings": { "location": "/usr/share/elasticsearch/snapshots/production/s3-${{ inputs.dockerversion }}" } }' || exit 0

      - name: Delete indices and snapshots for that release, except current/analysis_file snapshot
        run: |
          echo curl -s -X DELETE "es1:9200/*--${{ inputs.release }}*"
          echo curl -s -X DELETE "es1:9200/_snapshot/s3-current/20*"

      - name: Restore and rename analysis_file snapshot to current RELEASE indices
        run: |
          echo curl -s -X POST "es1:9200/_snapshot/latest/analysis_file/_restore?wait_for_completion=true&pretty" \
            -H 'Content-Type: application/json' \
            -d' {
              "ignore_unavailable": true,
              "include_global_state": false,
              "include_aliases": false,
              "rename_pattern" : "--goat--202.*",
              "rename_replacement" : "--goat--${{ inputs.release }}"
              }'

  genomehubs-init:
    runs-on: [self-hosted, runner1]
    needs:
      - fetch-dockers
      - prepare-snapshots
    steps:
      - name: Run genomehubs init
        run: |
          echo docker run --rm --network=host \
            -v `pwd`/sources:/genomehubs/sources \
            genomehubs/genomehubs:${{ inputs.dockerversion }} bash -c \
              "genomehubs init \
                --es-host es1:9200 \
                --taxonomy-source ncbi \
                --config-file sources/goat.yaml \
                --es-version ${{ inputs.release }} \
                --taxonomy-jsonl sources/ena-taxonomy/ena-taxonomy.extra.jsonl.gz \
                --taxonomy-ncbi-root 2759 \
                --taxon-preload"
