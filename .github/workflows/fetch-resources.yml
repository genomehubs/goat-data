name: fetch-resources
on:
  workflow_call:
    inputs:
      dockerversion:
        required: true
        type: string
      resources:
        required: true
        type: string
      taxroot:
        required: true
        type: string
    secrets:
      JGI_OFFLINE_TOKEN:
        required: true
      ORIGINAL2_5_SCHEMA:
        required: true
      STS_AUTHORIZATION_KEY:
        required: true

jobs:
  fetch-ncbi-datasets:
    runs-on: [self-hosted, runner1]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch NCBI datasets executable
        run: |
          CMD="curl -Ls https://ftp.ncbi.nlm.nih.gov/pub/datasets/command-line/v2/linux-amd64/datasets > datasets" \
          FALLBACK=s3://goat/resources/datasets \
          RESOURCES=${{ inputs.resources }} \
          ./scripts/update-resources/fetch-or-fallback.sh

  fetch-resources-taxroot:
    needs:
      - fetch-ncbi-datasets
    strategy:
      matrix:
        taxroot: ${{ fromJson(inputs.taxroot) }}
    uses: ./.github/workflows/fetch-resources-taxroot.yml
    with:
      dockerversion: ${{ inputs.dockerversion }}
      resources: ${{ inputs.resources }}
      taxroot: ${{ matrix.taxroot }}

  collate-taxroot-resources:
    runs-on: [self-hosted, runner1]
    needs:
      - fetch-resources-taxroot
    steps:
      - name: collate-ncbi-datasets-assembly
        run: |
          shopt -s extglob
          cat ${{ inputs.resources }}/assembly-data/ncbi_datasets_*([0-9]).tsv.gz > ${{ inputs.resources }}/assembly-data/ncbi_datasets_eukaryota.tsv.gz
          s3cmd put setacl --acl-public ${{ inputs.resources }}/assembly-data/ncbi_datasets_eukaryota.tsv.gz s3://goat/resources/assembly-data/ncbi_datasets_eukaryota.tsv.gz
          mkdir -p ${{ inputs.resources }}/assembly-data-taxon
          cp ${{ inputs.resources }}/assembly-data/ncbi_datasets_eukaryota.tsv.gz ${{ inputs.resources }}/assembly-data-taxon/ncbi_datasets_eukaryota.tsv.gz
          s3cmd put setacl --acl-public ${{ inputs.resources }}/assembly-data-taxon/ncbi_datasets_eukaryota.tsv.gz s3://goat/resources/assembly-data-taxon/ncbi_datasets_eukaryota.tsv.gz
          cat ${{ inputs.resources }}/assembly-data-sample/ncbi_datasets_*([0-9])_sample.tsv.gz > ${{ inputs.resources }}/assembly-data/ncbi_datasets_eukaryota_sample.tsv.gz
          s3cmd put setacl --acl-public ${{ inputs.resources }}/assembly-data-sample/ncbi_datasets_eukaryota.tsv.gz s3://goat/resources/assembly-data-sample/ncbi_datasets_eukaryota_sample.tsv.gz
      - name: collate-ena-taxonomy-extra
        run: |
          shopt -s extglob
          cat ${{ inputs.resources }}/ena-taxonomy/ena-taxonomy.extra.*([0-9]).jsonl.gz > ${{ inputs.resources }}/ena-taxonomy/ena-taxonomy.extra.jsonl.gz
          s3cmd put setacl --acl-public ${{ inputs.resources }}/ena-taxonomy/ena-taxonomy.extra.jsonl.gz s3://goat/resources/ena-taxonomy/ena-taxonomy.extra.jsonl.gz

  fetch-blobtoolkit:
    runs-on: [self-hosted, runner1]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch BlobToolKit
        run: |
          CMD="docker run --rm --network=host \
          -v \$(pwd):/genomehubs/tmp \
          genomehubs/genomehubs:${{ inputs.dockerversion }} bash -c \
            \"genomehubs parse \
              --btk --btk-root Eukaryota --outfile tmp/btk.tsv.gz\"" \
          FALLBACK=s3://goat/resources/btk/btk.tsv.gz,s3://goat/resources/btk/btk.files.yaml \
          RESOURCES=${{ inputs.resources }}/btk \
          ./scripts/update-resources/fetch-or-fallback.sh

  fetch-ncbi-taxdump:
    runs-on: [self-hosted, runner1]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch NCBI taxdump
        run: |
          CMD="curl -s https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz \
          | tar xzf - nodes.dmp names.dmp" \
          FALLBACK=s3://goat/resources/taxdump/ncbi/nodes.dmp,s3://goat/resources/taxdump/ncbi/names.dmp \
          RESOURCES=${{ inputs.resources }}/taxdump/ncbi \
          ./scripts/update-resources/fetch-or-fallback.sh

  fetch-refseq-organelles:
    runs-on: [self-hosted, runner1]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch RefSeq organelles
        run: |
          CMD="docker run --rm --network=host \
          -v \$(pwd):/genomehubs/tmp \
          genomehubs/genomehubs:${{ inputs.dockerversion }} bash -c \
            \"genomehubs parse --refseq-organelles --outfile tmp/refseq_organelles.tsv.gz\"" \
          FALLBACK=s3://goat/resources/assembly-data/refseq_organelles.tsv.gz \
          RESOURCES=${{ inputs.resources }}/assembly-data \
          ./scripts/update-resources/fetch-or-fallback.sh

  fetch-tolids:
    runs-on: [self-hosted, runner1]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch ToLIDs
        run: |
          CMD="curl -s https://gitlab.com/wtsi-grit/darwin-tree-of-life-sample-naming/-/raw/master/tolids.txt \
          | gzip -c > tolids.tsv.gz" \
          FALLBACK=s3://goat/resources/tolids/tolids.tsv.gz \
          RESOURCES=${{ inputs.resources }}/tolids \
          ./scripts/update-resources/fetch-or-fallback.sh

  fetch-from-apis:
    runs-on: [self-hosted, runner1]
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install requests pyyaml pandas numpy
      - name: Fetch from NHM and VGP and STS APIs
        # Fetches:
        # - nhm.tsv
        # - sts.tsv
        # - vgp.tsv
        run: |
          rm -rf ${{ inputs.resources }}/status-lists/tmp
          mkdir -p ${{ inputs.resources }}/status-lists/tmp
          python3 ./scripts/api/api_to_tsv.py ${{ inputs.resources }}/status-lists/tmp ${{ secrets.STS_AUTHORIZATION_KEY }} || exit 0
      - name: Process NHM tsv
        run: |
          perl -plne '
            s/(.*institutionCode.*)/$1\tsequencing_status\tsample_collected\tsample_collected_by/ and next;
            s/$/\tsample_collected\tDTOL\tNHM/;
          ' ${{ inputs.resources }}/status-lists/tmp/nhm.raw > ${{ inputs.resources }}/status-lists/tmp/nhm.tsv
      - name: Process VGP tsv
        run: |
          perl -plne '
            s/(.*taxon_id.*)$/$1\tlong_list\tsample_collected\tsample_acquired\tin_progress\tinsdc_submitted\tinsdc_open\tpublished/;
            s/(.*0-data_queued.*)$/$1\tVGP\tVGP\tVGP\t\t\t\t/;
            s/(.(1-DNA_isolation|2-data_progress|3-data_done|4-asm_progress|5-asm_done|6-asm_curation|7-asm_curated).*)$/$1\tVGP\tVGP\tVGP\tVGP\t\t\t/;
            s/(.*8-NCBI.*)$/$1\tVGP\tVGP\tVGP\tVGP\tVGP\tVGP\t/;
          ' ${{ inputs.resources }}/status-lists/tmp/vgp.raw > ${{ inputs.resources }}/status-lists/tmp/vgp.tsv
      - name: Fetch from JGI
        # Fetches:
        # - jgi_1kfg.tsv
        run: |
          python3 ./scripts/jgi_to_tsv.py ${{ inputs.resources }}/status-lists/tmp ${{ secrets.JGI_OFFLINE_TOKEN }} || exit 0
      - name: Fetch status from googlesheets
        # Fetches:
        # - ATLASEA_expanded.tsv
        # - BGE_expanded.tsv
        # - CBP_expanded.tsv
        # - EBPN_expanded.tsv
        # - ERGA-CH_expanded.tsv
        # - EUROFISH_expanded.tsv
        # - GREECE-HSP_expanded.tsv
        # - SOLVENIA-HSP_expanded.tsv
        # - SPAIN-HSP_expanded.tsv
        # - YGG_expanded.tsv
        run: |
          python3 ./scripts/import_status.py ${{ inputs.resources }}/status-lists/tmp "${{ secrets.ORIGINAL2_5_SCHEMA }}" || exit 0
      - name: Fetch other from googlesheets
        # Fetches:
        # - cngb.tsv
        # - DTOL_assembly_informatics_status_kmer_draft.tsv
        # - DTOL_Plant_Genome_Size_Estimates.tsv
        run: |
          rm -rf ${{ inputs.resources }}/assembly-data/tmp
          mkdir -p ${{ inputs.resources }}/assembly-data/tmp
          rm -rf ${{ inputs.resources }}/genomesize-karyotype/tmp
          mkdir -p ${{ inputs.resources }}/genomesize-karyotype/tmp
          docker pull genomehubs/r-ver:latest
          docker run --rm --user $UID:$GROUPS \
            -v $GITHUB_WORKSPACE:/goat-data \
            -v ${{ inputs.resources }}:/tmp \
            -w /goat-data \
            genomehubs/r-ver:latest \
            Rscript ./scripts/get_googlesheets.R /tmp/genomesize-karyotype/tmp /tmp/assembly-data/tmp
      - name: Move assembly data files or fallback to previous
        run: |
          ls ${{ inputs.resources }}/assembly-data/tmp
          CMD="mv ${{ inputs.resources }}/assembly-data/tmp/* ./" \
          FALLBACK=$(ls ${{ inputs.resources }}/assembly-data/tmp/*.tsv* | sed 's/.*\//s3:\/\/goat\/resources\/assembly-data\//g;s/\.failed$//g'|paste -sd, -) \
          RESOURCES=${{ inputs.resources }}/assembly-data \
          ./scripts/update-resources/fetch-or-fallback.sh
          mkdir -p ${{ inputs.resources }}/assembly-data-taxon
          cp ${{ inputs.resources }}/assembly-data/cngb.tsv ${{ inputs.resources }}/assembly-data-taxon/
      - name: Move genomesize/karyotype files or fallback to previous
        run: |
          ls ${{ inputs.resources }}/genomesize-karyotype/tmp
          CMD="mv ${{ inputs.resources }}/genomesize-karyotype/tmp/* ./" \
          FALLBACK=$(ls ${{ inputs.resources }}/genomesize-karyotype/tmp/*.tsv* | sed 's/.*\//s3:\/\/goat\/resources\/genomesize-karyotype\//g;s/\.failed$//g'|paste -sd, -) \
          RESOURCES=${{ inputs.resources }}/genomesize-karyotype \
          ./scripts/update-resources/fetch-or-fallback.sh
      - name: Move status list files or fallback to previous
        run: |
          ls ${{ inputs.resources }}/status-lists/tmp
          CMD="mv ${{ inputs.resources }}/status-lists/tmp/* ./" \
          FALLBACK=$(ls ${{ inputs.resources }}/status-lists/tmp/*.tsv* | sed 's/.*\//s3:\/\/goat\/resources\/status-lists\//g;s/\.failed$//g'|paste -sd, -) \
          RESOURCES=${{ inputs.resources }}/status-lists \
          ./scripts/update-resources/fetch-or-fallback.sh
