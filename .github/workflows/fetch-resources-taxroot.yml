name: fetch-resources-taxroot
on:
  workflow_call:
    inputs:
      dockerversion:
        required: true
        type: string
      resources:
        required: true
        type: string
      taxroot:
        required: true
        type: string

jobs:
  # fetch-blobtoolkit:
  #   runs-on: [self-hosted, runner1]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Fetch BlobToolKit
  #       run: |
  #         CMD="docker run --rm --network=host \
  #         -v \$(pwd):/genomehubs/tmp \
  #         genomehubs/genomehubs:${{ inputs.dockerversion }} bash -c \
  #           \"genomehubs parse \
  #             --btk --btk-root ${{ inputs.taxroot }} --outfile tmp/btk.tsv.gz\"" \
  #         FALLBACK=s3://goat/resources/btk/btk.tsv.gz \
  #         RESOURCES=${{ inputs.resources }}/btk \
  #         ./scripts/update-resources/fetch-or-fallback.sh

  # fetch-ena-taxonomy-prev:
  #   runs-on: [self-hosted, runner1]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Fetch ENA taxonomy prev
  #       run: |
  #         CMD="cp ${{ inputs.resources }}/ena-taxonomy.extra.${{ inputs.taxroot }}.jsonl.gz ./" \
  #         FALLBACK="s3://goat/resources/ena-taxonomy/ena-taxonomy.extra.${{ inputs.taxroot }}.jsonl.gz" \
  #         RESOURCES=${{ inputs.resources }}/ena-taxonomy \
  #         ./scripts/update-resources/fetch-or-fallback.sh || exit 0

  # fetch-ena-taxonomy-extra:
  #   runs-on: [self-hosted, runner1]
  #   needs:
  #     - fetch-ena-taxonomy-prev
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Fetch ENA taxonomy extra
  #       run: |
  #         CMD="cp ${{ inputs.resources }}/ena-taxonomy.extra.${{ inputs.taxroot }}.jsonl.gz ./ 2>/dev/null || : && \
  #         bash ${{ github.workspace }}/scripts/update-resources/get_ena_taxonomy_extra.bash ${{ inputs.taxroot }}" \
  #         FALLBACK="s3://goat/resources/ena-taxonomy/ena-taxonomy.extra.${{ inputs.taxroot }}.jsonl.gz" \
  #         RESOURCES=${{ inputs.resources }}/ena-taxonomy \
  #         ./scripts/update-resources/fetch-or-fallback.sh

  fetch-ncbi-datasets-zip:
    runs-on: [self-hosted, runner1]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch NCBI TAXROOT datasets zip
        run: |
          CMD="chmod 755 ${{ inputs.resources }}/datasets && ${{ inputs.resources }}/datasets download genome taxon ${{ inputs.taxroot }} --no-progressbar --dehydrated --filename ${{ inputs.taxroot }}.zip" \
          FALLBACK="s3://goat/resources/assembly-data/${{ inputs.taxroot }}.zip" \
          RESOURCES=${{ inputs.resources }}/assembly-data \
          ./scripts/update-resources/fetch-or-fallback.sh
      - name: Unzip NCBI TAXROOT datasets zip
        run: |
          unzip -o -d ${{ inputs.resources }}/assembly-data ${{ inputs.resources }}/assembly-data/${{ inputs.taxroot }}.zip ncbi_dataset/data/assembly_data_report.jsonl
          ls ${{ inputs.resources }}/assembly-data

      # - name: genomehubs parse --ncbi-datasets-genome
      #   run: |
      #     docker run --rm --network=host \
      #       -v `pwd`/sources:/genomehubs/sources \
      #       genomehubs/genomehubs:$DOCKERVERSION bash -c \
      #       "genomehubs parse --ncbi-datasets-genome sources/assembly-data --outfile sources/parsed/ncbi_datasets_eukaryota.tsv.gz"
      #     cp sources/parsed/ncbi_datasets_eukaryota.tsv.gz sources/assembly-data/
      #     cp sources/parsed/ncbi_datasets_eukaryota.tsv.gz sources/assembly-data-taxon/
      # - name: genomehubs parse --ncbi-datasets-sample
      #   run: |
      #     mkdir -p sources/assembly-data-sample
      #     docker run --rm --network=host \
      #       -v `pwd`/sources:/genomehubs/sources \
      #       genomehubs/genomehubs:$DOCKERVERSION bash -c \
      #       "genomehubs parse --ncbi-datasets-sample sources/assembly-data --outfile sources/parsed/ncbi_datasets_eukaryota_sample.tsv.gz"
      #     cp sources/parsed/ncbi_datasets_eukaryota_sample.tsv.gz sources/assembly-data-sample/
