name: fetch-resources-taxroot
on:
  workflow_call:
    inputs:
      dockerversion:
        required: true
        type: string
      resources:
        required: true
        type: string
      taxroot:
        required: true
        type: string

jobs:
  get-taxon-name-from-id:
    runs-on: ubuntu-latest
    steps:
      - name: Get taxon name from GoaT
        run: |
          echo TAXNAME=$(curl "https://goat.genomehubs.org/api/v2/search?query=tax_name%28${{ inputs.taxroot }}%29&size=1" | \
            yq -r '.results[0].result.scientific_name') >> GITHUB_ENV

  fetch-blobtoolkit:
    runs-on: [self-hosted, runner1]
    needs:
      - get-taxon-name-from-id
    steps:
      - uses: actions/checkout@v3
      - name: Fetch BlobToolKit
        run: |
          CMD="docker run --rm --network=host \
          -v \$(pwd):/genomehubs/tmp \
          genomehubs/genomehubs:${{ inputs.dockerversion }} bash -c \
            \"genomehubs parse \
              --btk --btk-root $TAXNAME --outfile tmp/btk.${{ inputs.taxroot }}.tsv.gz\"" \
          FALLBACK=s3://goat/resources/btk/btk.${{ inputs.taxroot }}.tsv.gz,s3://goat/resources/btk/btk.${{ inputs.taxroot }}.files.gz \
          RESOURCES=${{ inputs.resources }}/btk \
          ./scripts/update-resources/fetch-or-fallback.sh

  # fetch-ena-taxonomy-prev:
  #   runs-on: [self-hosted, runner1]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Fetch ENA taxonomy prev
  #       run: |
  #         CMD="cp ${{ inputs.resources }}/ena-taxonomy.extra.${{ inputs.taxroot }}.jsonl.gz ./" \
  #         FALLBACK="s3://goat/resources/ena-taxonomy/ena-taxonomy.extra.${{ inputs.taxroot }}.jsonl.gz" \
  #         RESOURCES=${{ inputs.resources }}/ena-taxonomy \
  #         ./scripts/update-resources/fetch-or-fallback.sh || exit 0

  # fetch-ena-taxonomy-extra:
  #   runs-on: [self-hosted, runner1]
  #   needs:
  #     - fetch-ena-taxonomy-prev
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Fetch ENA taxonomy extra
  #       run: |
  #         CMD="cp ${{ inputs.resources }}/ena-taxonomy.extra.${{ inputs.taxroot }}.jsonl.gz ./ 2>/dev/null || : && \
  #         bash ${{ github.workspace }}/scripts/update-resources/get_ena_taxonomy_extra.bash ${{ inputs.taxroot }}" \
  #         FALLBACK="s3://goat/resources/ena-taxonomy/ena-taxonomy.extra.${{ inputs.taxroot }}.jsonl.gz" \
  #         RESOURCES=${{ inputs.resources }}/ena-taxonomy \
  #         ./scripts/update-resources/fetch-or-fallback.sh

  # fetch-ncbi-datasets-zip:
  #   runs-on: [self-hosted, runner1]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Fetch NCBI TAXROOT datasets zip
  #       run: |
  #         CMD="chmod 755 ${{ inputs.resources }}/datasets && ${{ inputs.resources }}/datasets download genome taxon ${{ inputs.taxroot }} --no-progressbar --dehydrated --filename ${{ inputs.taxroot }}.zip" \
  #         FALLBACK="s3://goat/resources/assembly-data/${{ inputs.taxroot }}.zip" \
  #         RESOURCES=${{ inputs.resources }}/assembly-data \
  #         ./scripts/update-resources/fetch-or-fallback.sh
  #     - name: Unzip NCBI TAXROOT datasets zip
  #       run: |
  #         unzip -o -d ${{ inputs.resources }}/assembly-data ${{ inputs.resources }}/assembly-data/${{ inputs.taxroot }}.zip ncbi_dataset/data/assembly_data_report.jsonl
  #         ls ${{ inputs.resources }}/assembly-data
  #     - name: Run genomehubs parse --ncbi-datasets-genome
  #       run: |
  #         CMD="docker run --rm --network=host \
  #         -v \$(pwd):/genomehubs/tmp \
  #         -v ${{ inputs.resources }}/assembly-data:/genomehubs/assembly-data \
  #         genomehubs/genomehubs:${{ inputs.dockerversion }} bash -c \
  #           \"genomehubs parse --ncbi-datasets-genome assembly-data --outfile tmp/ncbi_datasets_${{ inputs.taxroot }}.tsv.gz\"" \
  #         FALLBACK=s3://goat/resources/assembly-data/ncbi_datasets_${{ inputs.taxroot }}.tsv.gz \
  #         RESOURCES=${{ inputs.resources }}/assembly-data \
  #         ./scripts/update-resources/fetch-or-fallback.sh
  #     - name: Run genomehubs parse --ncbi-datasets-sample
  #       run: |
  #         CMD="docker run --rm --network=host \
  #         -v \$(pwd):/genomehubs/tmp \
  #         -v ${{ inputs.resources }}/assembly-data:/genomehubs/assembly-data \
  #         genomehubs/genomehubs:${{ inputs.dockerversion }} bash -c \
  #           \"genomehubs parse --ncbi-datasets-sample assembly-data --outfile tmp/ncbi_datasets_${{ inputs.taxroot }}_sample.tsv.gz\"" \
  #         FALLBACK=s3://goat/resources/assembly-data-sample/ncbi_datasets_${{ inputs.taxroot }}_sample.tsv.gz \
  #         RESOURCES=${{ inputs.resources }}/assembly-data-sample \
  #         ./scripts/update-resources/fetch-or-fallback.sh
